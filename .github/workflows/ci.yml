name: CI Workflow
on:
  push:
    branches:
      - master
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into Container Registry
        if: ${{ github.ref_name == 'master' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.ref_name == 'master' }}
          tags: |
            ghcr.io/chitoku-k/slack-to-ssh:latest
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up reviewdog
        uses: reviewdog/action-setup@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build
        uses: docker/build-push-action@v6
        id: build
        with:
          target: dev
          cache-from: type=gha,scope=${{ github.ref_name }}-test
          cache-to: type=gha,scope=${{ github.ref_name }}-test,mode=max
          load: true
      - name: Run golangci-lint
        if: ${{ always() && steps.build.conclusion == 'success' }}
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker run --rm ${{ steps.build.outputs.imageid }} golangci-lint run --output.text.path=stdout |
            reviewdog -f=golangci-lint -reporter=github-pr-annotations -filter-mode=nofilter -fail-level=any -tee
